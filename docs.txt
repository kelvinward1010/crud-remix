Loader là một hàm được gọi để fetch data (lấy dữ liệu) trước khi render một component. 
Dữ liệu này có thể là bất kỳ thứ gì: dữ liệu từ database, API, hoặc thậm chí là 
các file tĩnh.

Mục đích:
    - Server-side rendering (SSR): Loader giúp render trang web ở phía server, 
    cải thiện SEO và thời gian tải trang ban đầu.
    - Data fetching: Cung cấp dữ liệu cần thiết cho component để hiển thị nội dung.
    - Caching: Loader có thể được sử dụng để cache dữ liệu, giảm tải cho server 
    và cải thiện hiệu năng.
Cách hoạt động:
    - Khi một route được truy cập, loader sẽ được gọi để lấy dữ liệu.
    - Dữ liệu được trả về từ loader sẽ được truyền vào component như một props.
    - Component sử dụng dữ liệu này để render giao diện người dùng.


Action là một hàm được gọi để xử lý các tương tác của người dùng như gửi 
form, xóa dữ liệu, hoặc cập nhật dữ liệu.

Mục đích:
    - Xử lý các sự kiện của người dùng: Khi người dùng thực hiện một hành động nào 
    đó trên giao diện (ví dụ: nhấn nút submit form), action sẽ được gọi.
    - Thay đổi dữ liệu trên server: Action thường được sử dụng để gửi dữ liệu 
    lên server và cập nhật dữ liệu trong database.
    - Chuyển hướng: Sau khi thực hiện một action, bạn có thể chuyển hướng 
    người dùng đến một trang khác.

Khi nào nên sử dụng useFetcher
    - useFetcher là một hook tiện ích để thực hiện các yêu cầu không đồng bộ mà không cần điều hướng trang. Nó phù hợp trong các trường hợp sau:

    Tải dữ liệu động: Khi bạn cần tải dữ liệu không đồng bộ để cập nhật giao diện mà không cần điều hướng lại trang.

    Ví dụ: Tải thêm nội dung khi người dùng nhấn nút "Load more" hoặc cập nhật danh sách bài viết mà không cần tải lại trang.
    Gửi form không cần điều hướng:
    Khi bạn cần gửi dữ liệu từ form tới server mà không cần điều hướng hoặc làm mới trang.

    Ví dụ: Form đăng ký nhận bản tin hoặc cập nhật thông tin người dùng mà không cần chuyển hướng trang.
    Thực hiện các hành động không cần điều hướng:
    Khi bạn cần thực hiện các hành động như cập nhật, xóa dữ liệu mà không cần điều hướng lại trang.

    Ví dụ: Xóa một mục khỏi danh sách hoặc cập nhật một mục mà không thay đổi URL hoặc làm mới trang.

Khi nào nên sử dụng action
    - action là các hàm trong Remix dùng để xử lý các yêu cầu HTTP POST, PUT, DELETE hoặc PATCH. Nó phù hợp trong các trường hợp sau:

    Xử lý form submission:
    Khi người dùng gửi dữ liệu từ form và bạn cần xử lý dữ liệu đó trên server.

    Ví dụ: Xử lý đăng nhập, đăng ký, gửi bài viết mới, hoặc cập nhật thông tin người dùng.
    Xử lý các yêu cầu POST, PUT, DELETE, PATCH:
    Khi bạn cần thực hiện các yêu cầu HTTP để thay đổi trạng thái trên server.

    Ví dụ: Tạo mới một mục, cập nhật dữ liệu hiện có, hoặc xóa dữ liệu.
    Yêu cầu xác thực và xử lý dữ liệu phức tạp:
    Khi cần xác thực dữ liệu đầu vào và thực hiện các logic phức tạp trên server trước khi trả về kết quả cho client.

    Ví dụ: Xác thực thông tin người dùng, xử lý các thao tác liên quan đến giao dịch hoặc xử lý các thao tác liên quan đến bảo mật.